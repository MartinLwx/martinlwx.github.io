<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Data-Structure - Tag - MartinLwx&#39;s Blog</title>
        <link>https://martinlwx.github.io/en/tags/data-structure/</link>
        <description>Data-Structure - Tag - MartinLwx&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>martinlwx@163.com (MartinLwx)</managingEditor>
            <webMaster>martinlwx@163.com (MartinLwx)</webMaster><copyright>&lt;a rel=&#34;license noopener&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34; target=&#34;_blank&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt;</copyright><lastBuildDate>Sat, 15 Mar 2025 19:11:43 &#43;0800</lastBuildDate><atom:link href="https://martinlwx.github.io/en/tags/data-structure/" rel="self" type="application/rss+xml" /><item>
    <title>Prefix Sum Array: the secret to fast range sum query and more</title>
    <link>https://martinlwx.github.io/en/ds-prefixsum-array/</link>
    <pubDate>Sat, 15 Mar 2025 19:11:43 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/ds-prefixsum-array/</guid>
    <description><![CDATA[<h2 id="motivations" class="headerLink">
    <a href="#motivations" class="header-mark" aria-label="Header mark for 'Motivations'"></a>Motivations</h2><p>There is a type of problem where you are given an array $arr$ and $Q$ queries. Each query is represented as $query(l, r)$, which asks for the sum of the elements in the subarray $[l, r]$, i.e., $arr[l] + arr[l + 1] + &hellip; + arr[r]$.</p>
<p>If we handle each query using a brute-force approach, the time complexity will be $O(N)$. Thus, solving $Q$ queries would require $O(NQ)$. Is there a more efficient approach?</p>]]></description>
</item><item>
    <title>How to memorize the Red-black tree</title>
    <link>https://martinlwx.github.io/en/how-to-memorize-insertion-and-deletion-in-rb-tree/</link>
    <pubDate>Sat, 01 Jul 2023 17:12:40 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/how-to-memorize-insertion-and-deletion-in-rb-tree/</guid>
    <description><![CDATA[<h2 id="intro" class="headerLink">
    <a href="#intro" class="header-mark" aria-label="Header mark for 'Intro'"></a>Intro</h2><p>If you are attracted by the title of this blog, I believe you may agree with me: <strong>The process of memorizing the insertion and deletion operations of the Red-black tree can be incredibly arduous</strong>. It entails keeping track of complex tree rotations and the necessity to recolor nodes as required. I once read the renowned <em>Introducing to Algorithms</em> written by the CLRS. However, there are so many cases to remember and I quickly get overwhelmed.</p>]]></description>
</item></channel>
</rss>
