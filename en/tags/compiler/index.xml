<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Compiler - Tag - MartinLwx&#39;s Blog</title>
        <link>https://martinlwx.github.io/en/tags/compiler/</link>
        <description>Compiler - Tag - MartinLwx&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&lt;a rel=&#34;license noopener&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34; target=&#34;_blank&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt;</copyright><lastBuildDate>Wed, 19 Mar 2025 22:27:38 &#43;0800</lastBuildDate><atom:link href="https://martinlwx.github.io/en/tags/compiler/" rel="self" type="application/rss+xml" /><item>
    <title>Class Hierarchy Analysis: a quick way to generate call graph</title>
    <link>https://martinlwx.github.io/en/call-graph-generation-using-class-hierarchy-analysis/</link>
    <pubDate>Wed, 19 Mar 2025 22:27:38 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/call-graph-generation-using-class-hierarchy-analysis/</guid>
    <description><![CDATA[<h2 id="the-key-to-call-graph-construction" class="headerLink">
    <a href="#the-key-to-call-graph-construction" class="header-mark" aria-label="Header mark for 'The key to call graph construction'"></a>The key to call graph construction</h2><p>For an OOP programming language, the key challenge in call graph construction is handling the virtual call, as it may involve <em>multiple target methods</em>, as shown in the following table<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: "></th>
            <th style="text-align: ">Static Call</th>
            <th style="text-align: ">Special Call</th>
            <th style="text-align: ">Virtual Call</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">Instruction</td>
            <td style="text-align: "><code>invokestatic</code></td>
            <td style="text-align: "><code>invokespecial</code></td>
            <td style="text-align: "><code>invokeinterface, invokevirtual</code></td>
        </tr>
        <tr>
            <td style="text-align: ">Receiver Objects</td>
            <td style="text-align: ">❌</td>
            <td style="text-align: ">✅</td>
            <td style="text-align: ">✅</td>
        </tr>
        <tr>
            <td style="text-align: ">Target Methods</td>
            <td style="text-align: ">Static Method</td>
            <td style="text-align: ">Constructor, Private Instance Method, Superclass Instance Method</td>
            <td style="text-align: ">Other Instance Method</td>
        </tr>
        <tr>
            <td style="text-align: ">Count of Possible Target Methods</td>
            <td style="text-align: ">1</td>
            <td style="text-align: ">1</td>
            <td style="text-align: ">$\ge 1$ (polymorphism)</td>
        </tr>
        <tr>
            <td style="text-align: ">Determinancy</td>
            <td style="text-align: ">Compile-time</td>
            <td style="text-align: ">Compile-time</td>
            <td style="text-align: ">Run-time</td>
        </tr>
    </tbody>
  </table>
</div>
<h2 id="the-method-call-and-method-signature" class="headerLink">
    <a href="#the-method-call-and-method-signature" class="header-mark" aria-label="Header mark for 'The method call and method signature'"></a>The method call and method signature</h2><p>Let&rsquo;s take Java as an example; a method call may have this form.</p>]]></description>
</item><item>
    <title>What is Three-Address Code (3AC/TAC)</title>
    <link>https://martinlwx.github.io/en/three-address-code/</link>
    <pubDate>Tue, 18 Feb 2025 23:13:42 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/three-address-code/</guid>
    <description><![CDATA[<div class="details admonition info open">
    <div class="details-summary admonition-title">
        <span class="icon"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"/></svg></span>Info<span class="details-icon"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"/></svg></span>
    </div>
    <div class="details-content">
        <div class="admonition-content"><p><strong>Further reading</strong></p>]]></description>
</item><item>
    <title>Tree-sitter and its Query</title>
    <link>https://martinlwx.github.io/en/tree-sitter-and-its-query/</link>
    <pubDate>Sat, 07 Sep 2024 11:29:44 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/tree-sitter-and-its-query/</guid>
    <description><![CDATA[<h2 id="intro" class="headerLink">
    <a href="#intro" class="header-mark" aria-label="Header mark for 'Intro'"></a>Intro</h2><p>Tree-sitter is a parser generator, that is, we can leverage it to generate a specific parser. In addition to that, it also offers other functionality. For example, we can write a Query using S-expression, which will do the pattern matching on the AST. Before we delve into this feature, let&rsquo;s talk about some backgrounds</p>
<h2 id="s-expression" class="headerLink">
    <a href="#s-expression" class="header-mark" aria-label="Header mark for 'S-expression'"></a>S-expression</h2><div class="details admonition info open">
    <div class="details-summary admonition-title">
        <span class="icon"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"/></svg></span>Info<span class="details-icon"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"/></svg></span>
    </div>
    <div class="details-content">
        <div class="admonition-content">If you once wrote Lisp (or its dialects, such as Scheme and Racket), you should be familiar with the S-expression</div></div></div>
<p>We can define a S-expression <em>recursively</em>, the definition is</p>]]></description>
</item><item>
    <title>How to use the semantic actions to generate the symbol tables in ANTLR4</title>
    <link>https://martinlwx.github.io/en/how-to-use-antlr4-to-make-semantic-actions/</link>
    <pubDate>Sat, 28 May 2022 21:09:05 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/how-to-use-antlr4-to-make-semantic-actions/</guid>
    <description><![CDATA[<h2 id="what-are-the-semantic-actions" class="headerLink">
    <a href="#what-are-the-semantic-actions" class="header-mark" aria-label="Header mark for 'What are the semantic actions'"></a>What are the semantic actions</h2><p>When the parser processes the input code, it not only determines whether the syntax is correct but also performs some useful actions. These actions are called semantic actions. <strong>In fact, it is a piece of code</strong>, which is generally embedded in the rules of the grammar file. Then <strong>when the parser applies this specific rule</strong>, the code you set will be executed. From another perspective, semantic actions are actually <em><strong>&ldquo;triggers&rdquo;</strong></em>, and the trigger condition is that the parser applies the corresponding rules.</p>]]></description>
</item></channel>
</rss>
